---
apiVersion: v1
kind: Namespace
metadata:
  name: ruby-prometheus-metrics

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ruby-app-config
  namespace: ruby-prometheus-metrics
data:
  ELASTIC_APM_SERVER_URL: CHANGE_ME

---
apiVersion: v1
kind: Secret
metadata:
  name: elastic-apm-secret
  namespace: ruby-prometheus-metrics
type: Opaque
data:
  ELASTIC_APM_SECRET_TOKEN: CHANGE_ME

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ruby-app
  namespace: ruby-prometheus-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ruby-app
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "4567"
      labels:
        app: ruby-app
    spec:
      containers:
      - name: ruby-app
        image: banjodocker/ruby-prometheus-app:v1
        ports:
        - containerPort: 4567
        env:
        - name: REDIS_URL
          value: "redis://redis:6379"
        envFrom:
        - configMapRef:
            name: ruby-app-config
        - secretRef:
            name: elastic-apm-secret

---
apiVersion: v1
kind: Service
metadata:
  name: ruby-app-service
  namespace: ruby-prometheus-metrics
  labels:
    app: ruby-app  # Add this label
spec:
  selector:
    app: ruby-app
  ports:
    - name: web
      port: 80
      targetPort: 4567
    - name: metrics  # Add a named port for metrics
      port: 4567
      targetPort: 4567
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: ruby-prometheus-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2-alpine
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: ruby-app-service
  namespace: ruby-prometheus-metrics
  labels:
    app: ruby-app
spec:
  type: ClusterIP
  selector:
    app: ruby-app
  ports:
    - name: web
      port: 80
      targetPort: 4567
    - name: metrics
      port: 4567
      targetPort: 4567

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ruby-app-ingress
  namespace: ruby-prometheus-metrics
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: public
  tls:
  - hosts:
    secretName: ruby-app-tls
  rules:
  - host:
    http:
      paths:
      - path: /ruby-app(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ruby-app-service
            port: 
              number: 80

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ruby-app-monitor
  namespace: ruby-prometheus-metrics
  labels:
    app.kubernetes.io/instance: kube-prom-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 9.3.8
    helm.sh/chart: grafana-6.51.2
    release: kube-prom-stack
spec:
  selector:
    matchLabels:
      app: ruby-app
  namespaceSelector:
    matchNames:
      - ruby-prometheus-metrics
  endpoints:
    - path: /metrics
      port: metrics
      scheme: http
      scrapeTimeout: 10s
      targetPort: 4567
